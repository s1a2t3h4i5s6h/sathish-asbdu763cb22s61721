Implement a class called BankAccount that represents a bank account. The class should have private attributes for account number, account holder name, and account balance. Include methods to deposit money, withdraw money, and display the account balance. Ensure that the account balance cannot be accessed directly from outside the class. Write a program to create an instance of the BankAccount class and test the deposit and withdrawal functionality.
class BankAccount:
def__init__(self.account_number,account_holder_name,initial_balance=0.0):
 self.__account_number=account_number
self.__account_holder_name=account_holder_name
   self.__account_balance=initial_balance

def deposite (self,amount):
  if amount >0:
    self.__account_balance+=amount
    print(f"Deposite ${amount :2f}into account{self.__account_number}")
  else:
    print("Invalid deposit amount. please deposit a positive amount.")

def withdraw (self,amount):
  if amount >0:
    if self.__account_balance >=amount:
      self.__account_balance -=amount
      print(f"withdraw ${amount :.2f}from account {self.__account_number}")
    else:
      print("Insufficient balance. cannot withdraw.")
    else:
    print("Invalid withdraw amount.please withdraw a positive amount.")

def display_balance (self):
  print(f"account{self.__account_number}balance: ${self.=account_balance:2f}")


#Testing the Bank Account Class
#if__name__=="__main__":
# create a Bank Account instance
account1= Bank Account ("123456","John Doe",1000.00)

#Deposit money
account1.deposit (500.00)

#withdraw money
account1.withdraw (200.0)

#Display balance
account1.display_balance()
